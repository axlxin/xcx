<!-- Created using vQmod XML Generator by UKSB - http://uksb.github.com/vqgen/ //-->
<modification>
	<id><![CDATA[GP Options Calculate OC2011]]></id>
	<version><![CDATA[2.0]]></version>
	<vqmver><![CDATA[2.3.2]]></vqmver>
	<author><![CDATA[Kevin]]></author>
	<file name="admin/controller/catalog/product.php">
               <operation info="加载插件语言文件">
			<search position="after"><![CDATA[protected function getForm() {]]></search>
			<add>
                    <![CDATA[
    $this->load->language('catalog/gp_option_calculate');
    $data['tab_option_calculate'] = $this->language->get('tab_option_calculate');
    $data['gp_oc_column1'] = $this->language->get('gp_oc_column1');
    $data['gp_oc_column2'] = $this->language->get('gp_oc_column2');
    $data['gp_oc_tips1'] = $this->language->get('gp_oc_tips1');
    $data['gp_oc_tips2'] = $this->language->get('gp_oc_tips2');
    $data['gp_oc_tips3'] = $this->language->get('gp_oc_tips3');
    $data['gp_oc_tips4'] = $this->language->get('gp_oc_tips4');
]]></add>
		</operation>
		<operation info="将option的名称添加到数组中，方便页面显示">
			<search position="after"><![CDATA['product_option_value_id' => $product_option_value['product_option_value_id'],]]></search>
			<add>
<![CDATA[
						'product_option_value_name' => $product_option_value['name'],
]]>
                        </add>
		</operation>
                <operation info="Get code from SQL">
			<search position="before"><![CDATA[$this->load->model('sale/customer_group');]]></search>
			<add>
<![CDATA[
                if ( isset($this->request->get['product_id']) )
                {
                    $this->load->model('catalog/GP_option_calculate');
		    $data['GP_product_option_calculate'] = $this->model_catalog_GP_option_calculate->getProductCalculateCode($this->request->get['product_id']);
                }
                else
                {
                    $data['GP_product_option_calculate'] = '';
                }
]]>
                        </add>
		</operation>
	</file>
        <file name="admin/view/template/catalog/product_form.tpl">
		<operation info="Add option calculate tab">
			<search position="after"><![CDATA[<li><a href="#tab-option" data-toggle="tab"><?php echo $tab_option; ?></a></li>]]></search>
			<add>
<![CDATA[
<li><a href="#tab-option-calculate" data-toggle="tab"><?php echo $tab_option_calculate; ?></a></li>
]]>
                        </add>
		</operation>
                <operation info="Add option calculate tab div">
			<search position="before"><![CDATA[<div class="tab-pane" id="tab-recurring">]]></search>
			<add>
<![CDATA[
<div class="tab-pane" id="tab-option-calculate">
<?php if( is_array($product_options) && count($product_options)>0 ){ ?>
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <td class="text-left"><?php echo $gp_oc_column1; ?></td>
                    <td class="text-left"><?php echo $gp_oc_column2; ?></td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="text-left">
                        <ol style="height: 300px;overflow:auto;">
                            <?php 
                                foreach( $product_options as $each_option )
                                {
                                    $option_name = $each_option['name'];
                                    $option_type = $each_option['type'];
                                    $product_option_id = $each_option['product_option_id'];
                                    echo "<li style='color:red;'>$option_name ( ${product_option_id}-${option_type} ) <ul style='color:black;list-style-type:disc;padding-left:5%;'>";
                                    if ( $option_type=='select' || $option_type=='radio' || $option_type=='checkbox' )
                                    {
                                        foreach( $each_option['product_option_value'] as $each_option_value )
                                        {
                                            $option_value_name = $each_option_value['product_option_value_name'];
                                            $option_value_id = $each_option_value['product_option_value_id'];
                                            $format = '<li>%s ( %s )</li>';
                                            printf($format, $option_value_name, $option_value_id );
                                        }
                                    }
                                    echo "</ul></li>";

                                }
                            ?>
                        </ol>
                    </td>
                    <td class="text-left">
                        <textarea rows="15" cols="100" name="GP_product_option_calculate"><?php echo $GP_product_option_calculate; ?></textarea>
                        <br><span style="color:red"><?php echo $gp_oc_tips1; ?>: $combination_price</span>
                        <br><span style="color:red"><?php echo $gp_oc_tips2; ?>: $price</span>
                        <br><span style="color:red"><?php echo $gp_oc_tips3; ?>: $product_weight</span>
                        <br><span style="color:red"><?php echo $gp_oc_tips4; ?>: "$this->getPON($id)"</span>
                    </td>
                </tr>
            </tbody>
        <tfoot></tfoot>
        </table>
    </div>
<?php }else{ ?>
<div style="text-align:center;width:100%;color:red;">Please enable options in "Option" tab and try it again after save configuration!</div>
<?php }; ?>
</div>
]]>
                        </add>
		</operation>
	</file>
        <file name="admin/model/catalog/product.php">
		<operation info="编辑产品和删除产品时，同时修改option_calculate">
			<search position="before"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "product_discount WHERE product_id = '" . (int)$product_id . "'");]]></search>
			<add>
<![CDATA[
                if (isset($data['GP_product_option_calculate'])) {
                    $this->load->model('catalog/GP_option_calculate');
		    $this->model_catalog_GP_option_calculate->editProductCalculate($product_id,$data['GP_product_option_calculate']);
                }
]]>
                        </add>
		</operation>
                <operation info="更换SQL语句，获取Option Value Name">
			<search position="replace"><![CDATA[$product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_id = '" . (int)$product_option['product_option_id'] . "'");]]></search>
			<add>
<![CDATA[
$product_option_value_query = $this->db->query("SELECT pov.*,ovd.name FROM " . DB_PREFIX . "product_option_value pov INNER JOIN " . DB_PREFIX . "option_value_description ovd ON pov.option_value_id=ovd.option_value_id WHERE pov.product_option_id = '" . (int)$product_option['product_option_id'] . "' " );
]]>
                        </add>
		</operation>
                <operation info="将刚获取的Option Value Name添加到数组中">
			<search position="after"><![CDATA['option_value_id'         => $product_option_value['option_value_id'],]]></search>
			<add>
<![CDATA[
					'name'                    => $product_option_value["name"],
]]>
                        </add>
		</operation>
	</file>
        <file name="system/library/cart.php">
		<operation info="add calculated result to price">
			<search position="before"><![CDATA[$this->data[$key] = array(]]></search>
			<add>
<![CDATA[
                                        $calculate_query = $this->db->query("SELECT  * FROM " . DB_PREFIX . "GP_product_option_calculate WHERE product_id='" . (int)$product_id . "'");
                                        $calculate_info = $calculate_query->row;
                                        $calculate_code = '';
                                        $combination_price = 0;
                                        $product_weight = $product_query->row['weight'];
                                        if (is_array($calculate_info) && count($calculate_info)>0 )
                                        {
                                            $calculate_code = html_entity_decode($calculate_info['code'], ENT_COMPAT);
                                            $this->current_product_id = $product_id;
                                            $this->current_product_options = $options;
                                            eval($calculate_code);
                                        }                                     
                                        $price += $combination_price; 
]]>
                        </add>
		</operation>
                <operation info="modify the weight">
			<search position="replace"><![CDATA['weight'          => ($product_query->row['weight'] + $option_weight) * $quantity,]]></search>
			<add>
<![CDATA[
						'weight'          => ($product_weight + $option_weight) * $quantity,
]]>
                        </add>
		</operation>
                <operation info="add new method for getting product option's name">
			<search position="before"><![CDATA[public function hasDownload()]]></search>
			<add>
<![CDATA[
        private function getProductOptions($product_id) {
		$product_option_data = array();
		
		$product_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option po LEFT JOIN `" . DB_PREFIX . "option` o ON (po.option_id = o.option_id) LEFT JOIN " . DB_PREFIX . "option_description od ON (o.option_id = od.option_id) WHERE po.product_id = '" . (int)$product_id . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY o.sort_order");
		
		foreach ($product_option_query->rows as $product_option) {
			if ($product_option['type'] == 'select' || $product_option['type'] == 'radio' || $product_option['type'] == 'checkbox' || $product_option['type'] == 'image') {
				$product_option_value_data = array();	
				
				$product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN " . DB_PREFIX . "option_value ov ON (pov.option_value_id = ov.option_value_id) LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON (ov.option_value_id = ovd.option_value_id) WHERE pov.product_option_id = '" . (int)$product_option['product_option_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY ov.sort_order");
				
				foreach ($product_option_value_query->rows as $product_option_value) {
					$product_option_value_data[] = array(
						'product_option_value_id' => $product_option_value['product_option_value_id'],
						'option_value_id'         => $product_option_value['option_value_id'],
						'name'                    => $product_option_value['name'],
						'image'                   => $product_option_value['image'],
						'quantity'                => $product_option_value['quantity'],
						'subtract'                => $product_option_value['subtract'],
						'price'                   => $product_option_value['price'],
						'price_prefix'            => $product_option_value['price_prefix'],
						'points'                  => $product_option_value['points'],
						'points_prefix'           => $product_option_value['points_prefix'],						
						'weight'                  => $product_option_value['weight'],
						'weight_prefix'           => $product_option_value['weight_prefix']					
					);
				}
				
				$product_option_data[] = array(
					'product_option_id'    => $product_option['product_option_id'],
					'option_id'            => $product_option['option_id'],
					'name'                 => $product_option['name'],
					'type'                 => $product_option['type'],
					'product_option_value' => $product_option_value_data,
					'required'             => $product_option['required']
				);				
			} else {
				$product_option_data[] = array(
					'product_option_id' => $product_option['product_option_id'],
					'option_id'         => $product_option['option_id'],
					'name'              => $product_option['name'],
					'type'              => $product_option['type'],
					'product_option_value'      => array(),
					'required'          => $product_option['required']
				);				
			}
		}	
		
		return $product_option_data;
	}
        
        public function getPON( $selected_option_id )
        {
            //$this->load->model('catalog/option');
            //$product_options = $this->model_catalog_product->getProductOptions($this->current_product_id);
            $product_options = $this->getProductOptions($this->current_product_id);
            foreach ($product_options as $product_option)
            {
                if ($product_option['type'] == 'select' || $product_option['type'] == 'radio' || $product_option['type'] == 'checkbox' )
                {
                    if( $selected_option_id==(int)$product_option['product_option_id'] )
                    {
                        foreach ($product_option['product_option_value'] as $product_option_value)
                        {
                            $selected_option_value_id = $this->current_product_options[$selected_option_id];
                            if( $selected_option_value_id==$product_option_value['product_option_value_id'] )
                            {
                                return $product_option_value['name'];
                            }
                        }
                    }
                }
            }
            return null;
        }
]]>
                        </add>
		</operation>
	</file>
        
        <file name="catalog/controller/journal2/ajax.php">
            <operation info="" error="skip">
                <search position="after" offset="1">
                <![CDATA[$stock = $this->language->get('text_instock');]]>
                </search>
                <add><![CDATA[
// gp_option_calculate插件运算代码
        $calculate_query = $this->db->query("SELECT  * FROM " . DB_PREFIX . "GP_product_option_calculate WHERE product_id='" . (int)$product_id . "'");
        $calculate_info = $calculate_query->row;
        $calculate_code = '';
        $combination_price = 0;
        $options = $this->request->post['option'];

        if (is_array($calculate_info) && count($calculate_info)>0 )
        {
            $calculate_code = html_entity_decode($calculate_info['code'], ENT_COMPAT);
            $this->current_product_id = $product_id;
            $this->current_product_options = $this->request->post['option'];
            eval($calculate_code);
        }                                     
        $price += $combination_price;
]]></add>
            </operation>
            
            <operation info="" error="skip">
                <search position="after" offset="3">
                <![CDATA['points'    => $this->language->get('text_points') . ' ' . $points,]]>
                </search>
                <add><![CDATA[
private function getPON($selected_option_id) {
        //$this->load->model('catalog/option');
        //$product_options = $this->model_catalog_product->getProductOptions($this->current_product_id);
        $product_options = $this->getProductOptions($this->current_product_id);
        foreach ($product_options as $product_option) {
            if ($product_option['type'] == 'select' || $product_option['type'] == 'radio' || $product_option['type'] == 'checkbox') {
                if ($selected_option_id == (int) $product_option['product_option_id']) {
                    foreach ($product_option['product_option_value'] as $product_option_value) {
                        $selected_option_value_id = $this->current_product_options[$selected_option_id];
                        if ($selected_option_value_id == $product_option_value['product_option_value_id']) {
                            return $product_option_value['name'];
                        }
                    }
                }
            }
        }
        return null;
    }
        
    private function getProductOptions($product_id) {
    $product_option_data = array();

    $product_option_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "product_option` po LEFT JOIN `" . DB_PREFIX . "option` o ON (po.option_id = o.option_id) LEFT JOIN `" . DB_PREFIX . "option_description` od ON (o.option_id = od.option_id) WHERE po.product_id = '" . (int) $product_id . "' AND od.language_id = '" . (int) $this->config->get('config_language_id') . "'");

    foreach ($product_option_query->rows as $product_option) {
        $product_option_value_data = array();

        $product_option_value_query = $this->db->query("SELECT pov.*,ovd.name FROM " . DB_PREFIX . "product_option_value pov INNER JOIN " . DB_PREFIX . "option_value_description ovd ON pov.option_value_id=ovd.option_value_id WHERE pov.product_option_id = '" . (int) $product_option['product_option_id'] . "' ");

        foreach ($product_option_value_query->rows as $product_option_value) {
            $product_option_value_data[] = array(
                'product_option_value_id' => $product_option_value['product_option_value_id'],
                'option_value_id' => $product_option_value['option_value_id'],
                'quantity' => $product_option_value['quantity'],
                'subtract' => $product_option_value['subtract'],
                'price' => $product_option_value['price'],
                'name' => $product_option_value["name"],
                'price_prefix' => $product_option_value['price_prefix'],
                'points' => $product_option_value['points'],
                'points_prefix' => $product_option_value['points_prefix'],
                'weight' => $product_option_value['weight'],
                'weight_prefix' => $product_option_value['weight_prefix']
            );
        }

        $product_option_data[] = array(
            'product_option_id' => $product_option['product_option_id'],
            'product_option_value' => $product_option_value_data,
            'option_id' => $product_option['option_id'],
            'name' => $product_option['name'],
            'type' => $product_option['type'],
            'value' => $product_option['value'],
            'required' => $product_option['required']
        );
    }

    return $product_option_data;
}
]]></add>
            </operation>
        </file>
</modification>